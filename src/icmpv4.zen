const std = @import("std");

pub const pkt_hdr = packed struct {
    icmp_type: u8,
    code: u8,
    chksum: u16,
    payload: [*]u8,

    pub const TYPE_ECHO_REPLY = 0;
    pub const TYPE_ECHO_REQUEST = 8;
};

pub const pkt_echo = packed struct {
    identity: u16,
    sequence_id: u16,
    payload: [*]u8,
};

pub fn calc_chksum(data: [*]u8, len: usize) u16 {
    var chksum: u32 = 0;
    var idx: usize = 0;
    while (idx < len) : (idx += 2) {
        if (idx + 1 >= len) {
            chksum += (@intCast(u16, data[idx]) << 8) + 0;
        } else {
            chksum += (@intCast(u16, data[idx]) << 8) + @intCast(u16, data[idx + 1]);
        }
        if (chksum > 0xFFFF) {
            chksum = (chksum & 0xFFFF) + 1;
        }
    }

    return @intCast(u16, (~chksum) & 0xFFFF);
}
